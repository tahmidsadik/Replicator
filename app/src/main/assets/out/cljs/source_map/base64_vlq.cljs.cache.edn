;; Analyzed by ClojureScript 0.0-3479
{:name cljs.source-map.base64-vlq, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {string clojure.string, clojure.string clojure.string, base64 cljs.source-map.base64, cljs.source-map.base64 cljs.source-map.base64, StringBuffer goog.string.StringBuffer}, :imports {StringBuffer goog.string.StringBuffer}, :defs {vlq-base-shift {:name cljs.source-map.base64-vlq/vlq-base-shift, :file "out/cljs/source_map/base64_vlq.cljs", :line nil, :column nil, :end-line 14, :end-column 28, :const true, :meta {:file "/Users/frankie/Documents/clojure/replete/ClojureScript/replete/out/cljs/source_map/base64_vlq.cljs", :line 14, :column 14, :end-line 14, :end-column 28, :const true}}, vlq-base {:name cljs.source-map.base64-vlq/vlq-base, :file "out/cljs/source_map/base64_vlq.cljs", :line nil, :column nil, :end-line 15, :end-column 22, :const true, :meta {:file "/Users/frankie/Documents/clojure/replete/ClojureScript/replete/out/cljs/source_map/base64_vlq.cljs", :line 15, :column 14, :end-line 15, :end-column 22, :const true}}, vlq-base-mask {:name cljs.source-map.base64-vlq/vlq-base-mask, :file "out/cljs/source_map/base64_vlq.cljs", :line nil, :column nil, :end-line 16, :end-column 27, :const true, :meta {:file "/Users/frankie/Documents/clojure/replete/ClojureScript/replete/out/cljs/source_map/base64_vlq.cljs", :line 16, :column 14, :end-line 16, :end-column 27, :const true}}, vlq-continuation-bit {:name cljs.source-map.base64-vlq/vlq-continuation-bit, :file "out/cljs/source_map/base64_vlq.cljs", :line nil, :column nil, :end-line 17, :end-column 34, :const true, :meta {:file "/Users/frankie/Documents/clojure/replete/ClojureScript/replete/out/cljs/source_map/base64_vlq.cljs", :line 17, :column 14, :end-line 17, :end-column 34, :const true}}, to-vlq-signed {:protocol-inline nil, :meta {:file "/Users/frankie/Documents/clojure/replete/ClojureScript/replete/out/cljs/source_map/base64_vlq.cljs", :line 19, :column 7, :end-line 19, :end-column 20, :arglists (quote ([v]))}, :name cljs.source-map.base64-vlq/to-vlq-signed, :variadic false, :file "out/cljs/source_map/base64_vlq.cljs", :end-column 20, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, from-vlq-signed {:protocol-inline nil, :meta {:file "/Users/frankie/Documents/clojure/replete/ClojureScript/replete/out/cljs/source_map/base64_vlq.cljs", :line 24, :column 7, :end-line 24, :end-column 22, :arglists (quote ([v]))}, :name cljs.source-map.base64-vlq/from-vlq-signed, :variadic false, :file "out/cljs/source_map/base64_vlq.cljs", :end-column 22, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, encode-val {:protocol-inline nil, :meta {:file "/Users/frankie/Documents/clojure/replete/ClojureScript/replete/out/cljs/source_map/base64_vlq.cljs", :line 31, :column 7, :end-line 31, :end-column 17, :arglists (quote ([n]))}, :name cljs.source-map.base64-vlq/encode-val, :variadic false, :file "out/cljs/source_map/base64_vlq.cljs", :end-column 17, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, encode {:protocol-inline nil, :meta {:file "/Users/frankie/Documents/clojure/replete/ClojureScript/replete/out/cljs/source_map/base64_vlq.cljs", :line 44, :column 7, :end-line 44, :end-column 13, :arglists (quote ([v]))}, :name cljs.source-map.base64-vlq/encode, :variadic false, :file "out/cljs/source_map/base64_vlq.cljs", :end-column 13, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, decode {:protocol-inline nil, :meta {:file "/Users/frankie/Documents/clojure/replete/ClojureScript/replete/out/cljs/source_map/base64_vlq.cljs", :line 47, :column 7, :end-line 47, :end-column 13, :arglists (quote ([s]))}, :name cljs.source-map.base64-vlq/decode, :variadic false, :file "out/cljs/source_map/base64_vlq.cljs", :end-column 13, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}}}